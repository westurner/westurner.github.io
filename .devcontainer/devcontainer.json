{
	// # .devcontainer/devcontainer.json
	// ## Adapted from:
	// - https://github.com/matheusfvesco/devcontainer-templates/blob/00c5ed8386244131e73f5ab29f2d595365c25e5f/src/miniforge/.devcontainer/devcontainer.json
	//   (MIT License)
	// - https://github.com/flathub/com.visualstudio.code/issues/55#issuecomment-2561905012
	// - https://containers.dev/implementors/json_reference/

	// condaforge/miniforge3 tags: https://hub.docker.com/r/condaforge/miniforge3/tags
	// ## Source:
	"name": "Miniforge3",
	//"image": "docker.io/condaforge/miniforge3:latest",
	"build": {
		"context": "..",
		"dockerfile": "../Dockerfile"
	},

	// 1. Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": []

	// 2. Use 'mounts' to make a list of local directories available inside the container. More info: https://code.visualstudio.com/remote/advancedcontainers/add-local-file-mount
	// "mounts": [],

	// 3. Use 'runArgs' to pass arguments to the container.
	"runArgs": ["--userns=keep-id", "--security-opt=label=disable"],
	// These runArgs enable running as root in rootless containers with: podman.

	// run the container with all GPUs
	//"runArgs": [
	//	"--gpus",
	//	"all"
	//],

	// 4. Features to add to the Dev Container. More info: https://containers.dev/implementors/features
	// https://containers.dev/features
	"features": {
		/*


		// // make
		"ghcr.io/jungaretti/features/make:1": {
			// "version": "1.0.1"
		},


		// // git
		"ghcr.io/devcontainers/features/git:1": {
			"version": "os-provided",
			"ppa": "false"
		},
		// // git-lfs
		"ghcr.io/devcontainers/features/git-lfs:1": {
			// "version": "1.2.3"
		},


		// // conda
		// "ghcr.io/devcontainers/features/conda:1": {
		//	  // "version": "1.0.9"
		// },
		// // micromamba
		// "ghcr.io/mamba-org/devcontainer-features/micromamba:1": {
		//	"channels": "conda-forge",
		//	"packages": ["python=3.12", "pandas", "sympy", "ipykernel", "jupyter_console"],
		//	"envFile": "/etc/environment.yml"
		// },
		// // miniforge
		// "ghcr.io/rocker-org/devcontainer-features/miniforge:2": {
		//	// "version": "2.0.0"
		// },
		// // python

		"ghcr.io/devcontainers/features/python:1": {
			// "version": "1.7.0"
		},
		// // pipx
		"ghcr.io/devcontainers-extra/features/pipx-package:1": {
			// "version": "1.1.9",
		},
		// // pre-commit (pipx)
		"ghcr.io/devcontainers-extra/features/pre-commit:2": {
			// "version": "2.0.17",
		},
		// // pylint
		"ghcr.io/devcontainers-extra/features/pylint:1": {
			// "version": "2.0.17",
		},
		// // ruff (pipx)
		"ghcr.io/devcontainers-extra/features/ruff:1": {
			// "version": "1.0.1",
		},

		// // sqlite
		"ghcr.io/warrenbuckley/codespace-features/sqlite:1": {},
		// // DVC
		// "ghcr.io/iterative/features/dvc:1": {
		//	// "version": "1.0.4"
		// },
		// // github-cli: gh
		"ghcr.io/devcontainers/features/github-cli:1": {
			//
		},
		//

		// // shell-history -- https://github.com/stuartleeks/dev-container-features/blob/main/src/shell-history/README.md
		// "ghcr.io/stuartleeks/dev-container-features/shell-history:0": {}

		// "ghcr.io/jsburckhardt/devcontainer-features/jnv:1": {},
		// "ghcr.io/jsburckhardt/devcontainer-features/uv:1": {},
		// "ghcr.io/jsburckhardt/devcontainer-features/ruff:1": {},

		//
        // "ghcr.io/jsburckhardt/devcontainer-features/cyclonedx:1": {}

		*/
	},

	// 5. Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"python.defaultInterpreterPath": "/opt/conda/bin/python"
			},
			// installs useful extensions
			"extensions": [
				"ms-python.python",
				"ms-python.debugpy",
				"ms-python.vscode-pylance",
				"ms-python.isort",
				"ms-toolsai.jupyter",
				"ms-toolsai.jupyter-keymap",
				"ms-toolsai.vscode-jupyter-cell-tags",
				"ms-toolsai.jupyter-renderers",
				"ms-toolsai.vscode-jupyter-slideshow",
				//"ms-toolsai.tensorboard",
				"charliermarsh.ruff"
			]
		}
	},

	// 6. Set `remoteUser` to `root` to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "root",

	// the following commands are related to container lifecylce. More info: https://containers.dev/implementors/json_reference/#lifecycle-scripts

	// 7. Use 'initializeCommand' to run commands ON THE HOST before container is created or started.
	// "initializeCommand": "",

	// 8. Use 'onCreateCommand' to run commands INSIDE THE CONTAINER after it started for the first time.
	"onCreateCommand": "mamba install -q -y -c conda-forge uv pixi python=3.12 ipykernel pandas numpy sympy ipykernel ruff isort pytest-cov sphinx && python -m pip install tinkerer && python -m ipykernel install --user --name=python3.12"

	// 9. Use 'updateContentCommand' to run commands if the root filetree have any changes, during container creation.
	// "updateContentCommand": "",

	// 10. Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "pip3 install --user -r requirements.txt",

	// 11. Use 'postStartCommand' to run a command each time the container starts successfully.
	// "postStartCommand": "",

	// 12. Use 'postAttachCommand' to run a command each time a tool attaches to the container successfully.
	// "postAttachCommand": "",
}
